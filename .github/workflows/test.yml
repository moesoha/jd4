name: Tests

on:
  push: ~
  pull_request: ~

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5]
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py${{ matrix.python-version }}-pip--${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-pip-
            ${{ runner.os }}-py${{ matrix.python-version }}-

      - name: Prepare environment
        run: |
          mkdir -p ~/.config/jd4
          cp examples/config.yaml examples/langs.yaml ~/.config/jd4/
          python -m pip install -r requirements.txt
          python setup.py build_ext --inplace

      - name: Unit test
        run: python -m unittest -v jd4.case_test jd4.compare_test

      - name: Build docker image
        run: docker build -t vijos/jd4 .

      - name: Integration test
        run: |
          docker run --privileged \
            -v $(readlink -f examples/config.yaml):/root/.config/jd4/config.yaml \
            vijos/jd4 /bin/bash -c "source /venv/bin/activate && python3 -m unittest -v jd4.integration_test"
